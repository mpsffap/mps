#!/bin/bash

# shellcheck disable=SC2139,SC2015,SC2142,SC2154

MPSDIR="/opt/mps"

# source bash
alias sb='source ~/.bashrc'

# apt
alias pq='apt search'
alias pi='sudo apt install'
alias pd='sudo apt remove'
alias puu='sudo apt update && sudo apt upgrade && sudo apt autoremove'
alias cmmi='./configure && make && sudo make install'

# zoxide
alias zz='z -'
alias zq='zoxide query'

# yazi
alias y='yazi'

# ls
alias ll='ls -lah --color=auto'
alias la='ls -A --color=auto'
alias l='ls -CF --color=auto'
alias sll='sudo ls -la'

# exa
alias e='exa --icons=always'
alias et='exa --long --tree --icons=always'
alias ee='exa -abghHlS --icons=always'
alias eet='exa --long --tree -abghHlS --icons=always'
alias see='sudo exa -abghHlS --icons=always'
alias stree='sudo exa --long --tree --icons=always'

# Skeletons
alias skel='new-skeleton.bash'

# custom scripts
alias rfs='~/mps/snippets/rfs.bash'
alias vff='nvim $(~/mps/snippets/fuzzy-find.bash)'
alias ela='~/mps/snippets/elapsed.bash'
alias cheat='~/mps/snippets/chtsht.bash'

# cat
alias bcat='batcat'
alias scat='sudo cat'
alias sbcat='sudo batcat'

# cp
alias rp='rsync -arvP --info=progress2'

# diskinfo
alias fs='df -h | head -n1 ; df -h | tail -n +2 | sort -k1,5'

# mount
alias mo='sudo mount'
alias moa='sudo mount -a'
alias mu='sudo unmount'
alias fstab='sudo nvim /etc/fstab'

# apparmor
alias aa='sudo aa-status'
alias aa-enforce-all='sudo aa-enforce /etc/apparmor.d/*'
alias aa-complain-all='sudo aa-complain /etc/apparmor.d/*'

# git
alias gs='git status'
alias gss='git status -sb'
alias gl='git log --pretty=oneline'
alias gll='git log'
alias gd='git diff'
alias ga='git add'
alias gaa='git add -A'
alias gc='git commit -m'
alias gsl='git stash list'
alias gstash='git stash save wip'
alias gstashpop='bucket=$(git stash list | grep wip | awk "{print $1}" | cut -f 1 -d ":") ; [ ! -z "$bucket" ] && git stash pop "$bucket" || echo "NO"'
alias gpull='git pull'
alias gpush='git push'

# Ansible
alias ave='ansible-vault edit --vault-pass-file vault/vault_pass.txt'
alias avc='ansible-vault create --vault-pass-file vault/vault_pass.txt'
alias apb='ansible-playbook --become --vault-pass-file vault/vault_pass.txt -i inventory/hosts'


# network
alias ns='sudo netstat -tulpn |sort -k 4 -n'
alias nsao='sudo netstat -tulpano |sort -k 4 -n'

# iptables
alias iptl='sudo iptables -L -n -v'
alias iptln='sudo iptables -L -n -v -tnat'

# bridging
alias sbs='sudo brctl show'

# routing
alias srn='sudo route -n'

# ifconfig
alias sif='sudo ifconfig'
alias sifa='sudo ifconfig -a'

# systemd
alias sdr='sudo systemctl daemon-reload'

# kitty icat
alias icat='kitty +kitten icat --align=center --scale-up'

# nvim
alias v='nvim'
alias sv='sudo nvim'
# mps
alias mps="z ~/mps"
alias disks="z ~/mps/disks"
alias docs="z ~/mps/docs"
alias iso="z ~/mps/iso"
alias repo="z ~/mps/repo"
alias scratch="z ~/mps/scratch"
alias secrets="z ~/mps/secrets"
alias skeletons="z ~/mps/skeletons"
alias snippets="z ~/mps/snippets"
alias tools="z ~/mps/tools"
alias venv="z ~/mps/venv"
alias vm="z ~/mps/vm"
alias wsp="z ~/mps/wsp"

# More fancy colors
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Quick script for launching virtual machines with qemu
alias qvm_install="quickvm.bash -a install"
alias qvm_clone="quickvm.bash -a clone"
alias qvm_delete="quickvm.bash -a delete"
alias qvm_start="quickvm.bash -a start"
alias qvm_stop="quickvm.bash -a stop"
alias qvm_list="quickvm.bash -a list"
alias qvm_ssh="quickvm.bash -a ssh"

# vpn
# alias vpn-ptp="vpn.bash ptp"
# alias vpn-bridge="vpn.bash bridge"
# alias vpn-state="vpn.bash"

# public ip
alias whoamip='echo $(curl -s ifconfig.me)'

# tmux session control
alias tls="tmux ls"
alias tas="tmux attach -t "
alias tns="tmux new -s "
alias tks="tmux kill-server"
alias tkss="tmux kill-session -t "
alias muxme="~/mps/snippets/launch_tmux.bash"
alias muxme-matrix="~/mps/snippets/launch_tmux.bash 'hm && ho'"

# Custom config aliases
alias cfg-qtile="nvim ~/.config/qtile/config.py"
alias cfg-nvim="nvim ~/.config/nvim/init.lua"
alias cfg-kitty="nvim ~/.config/kitty/kitty.conf"
alias cfg-tmux="nvim ~/.config/tmux/tmux.conf.local"
alias cfg-ssh="nvim ~/.ssh/config"
alias cfg-snippets="nvim ~/mps/snippets"
alias cfg-skeletons="nvim ~/mps/skeletons"
alias cfg-autostart="nvim \$(which autostart.sh)"
alias cfg-backup="nvim \$(which backup.bash)"
alias cfg-bashrc="nvim ~/.bashrc && source ~/.bashrc"
alias cfg-zshrc="nvim ~/.zshrc && source ~/.zshrc"
alias cfg-hosts="sudo nvim /etc/hosts"
alias cfg-fstab="sudo nvim /etc/fstab"
alias cfg-net="sudo nvim /etc/network/interfaces"
alias cfg-crypt="sudo nvim /etc/crypttab"
alias cfg-alias-common="nvim ~/.config/bashrc/.bashrc_alias_common && source ~/.config/bashrc/.bashrc_alias_common"
alias cfg-alias-custom="nvim ~/.config/bashrc/.bashrc_alias_custom && source ~/.config/bashrc/.bashrc_alias_custom"

# info
alias info-mpsdir="echo $MPSDIR"
alias info-tmux="tmux ls"
alias info-pubip='echo $(curl -s ifconfig.me)'
alias info-mps="ls -la ~/mps/"
alias info-fs='df -h | head -n1 ; df -h | tail -n +2 | sort -k1,5'
alias info-zram='sudo zramctl'
alias info-mounts='sudo mount -a'
alias info-net='sudo netstat -tulpano |sort -k 4 -n'
alias info-fw='sudo iptables -L -n -v -tnat'
alias info-fwnat='sudo iptables -L -n -v -tnat'
alias info-bridges='sudo brctl show'
alias info-routes='sudo route -n'
alias info-nics='sudo ifconfig -a'

# Custom folders aliases
alias mpsrepo="z $MPSDIR"

# Docker
alias dps="docker ps -a"
alias dcexec="docker exec -ti "
alias dcstop="docker container stop "
alias dckill="docker container kill "
alias dcrm="docker container rm"
alias dnls="docker network ls"
alias dvls="docker volume ls"
alias dirm="docker image rm"
alias dia="docker images -a"
alias diatagged='docker images -a | grep -v "<none>"'
alias dl="docker logs -f"
dsh() { docker exec -it "$1" sh ; }
dbash() { docker exec -it "$1" bash ; }
dips() {
    local containers
    if [ -n "$1" ]; then
        containers=$(docker ps -q -f "name=$1")
        if [ -z "$containers" ]; then
            echo "Error: Container '$1' not found or is not running."
            return 1
        fi
    else
        containers=$(docker ps -q)
    fi
    if [ -z "$containers" ]; then
        echo "No running Docker containers found."
        return 1
    fi
    echo "Listing running Docker containers and their IP addresses:"
    echo "--------------------------------------------------------"
    for container in $containers; do
        name=$(docker inspect --format '{{.Name}}' "$container" | sed 's/\///');
        ips=$(docker inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}},{{end}}' "$container");
        echo "Container: $name ($container)";
        IFS=',' read -ra ip_array <<< "$ips";
        for ip in "${ip_array[@]}"; do
            [ -n "$ip" ] && echo "  - IP: $ip";
        done;
        echo "--------------------------------------------------------";
    done
}

